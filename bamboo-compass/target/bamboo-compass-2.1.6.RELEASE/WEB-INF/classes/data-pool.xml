<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="jdbc.properties"></context:property-placeholder>

    <!--DBCP 数据库连接池 dbcp2 -->
    <bean id="dbcp2DataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!--Statement默认超时时间，单位：秒-->
        <property name="defaultQueryTimeout" value="3"/>
        <!--默认是否自动提交事务，默认为true-->
        <property name="defaultAutoCommit" value="false"/>
        <!--数据库连接属性，不同数据库配置不一样-->
        <property name="connectionProperties" value="connectTimeout=2000; socketTimeout=2000"/>

        <!--连接池队列类型默认为LIFO，false表示FIFO-->
        <property name="lifo" value="false"/>
        <property name="initialSize" value="80"/>
        <property name="minIdle" value="80"/>
        <property name="maxIdle" value="80"/>
        <property name="maxTotal" value="80"/>

        <!--等待获取连接池时间，500ms-->
        <property name="maxWaitMillis" value="500"/>

        <!--从池中获取连接时进行验证，默认true-->
        <property name="testOnBorrow" value="true"/>
        <!--新建连接时进行验证，默认false-->
        <property name="testOnCreate" value="false"/>
        <!--连接释放回池时进行验证，默认false-->
        <property name="testOnReturn" value="false"/>

        <!--如果不设置，将调用Connection#isValid(int timeout)验证数据库是否有效-->
        <property name="validationQuery" value=""/>
        <!--连接存活的最长时间，<=0禁用该配置-->
        <property name="maxConnLifetimeMillis" value="0"/>
        <!--驱除定时器执行周期，<=0 代表禁用-->
        <property name="timeBetweenEvictionRunsMillis" value="0"/>
        <!--minIdle小于当前空闲连接数量，使用这个时间测试-->
        <property name="softMinEvictableIdleTimeMillis" value="0"/>
        <!-- 连接空闲多久从池中驱除 -->
        <property name="minEvictableIdleTimeMillis" value="0"/>
        <!--每次测试多少空闲对象， <=0 代表禁用-->
        <property name="numTestsPerEvictionRun" value="0"/>
        <!--当连接空闲时是否测试，即保持连接一直存活，配合驱除定时器使用-->
        <property name="testWhileIdle" value="false"/>
        <!--判断连接是否需要驱除策略，默认为DefaultEvictionPolicy-->
        <property name="evictionPolicyClassName" value="org.apache.commons.pool2.impl.DefaultEvictionPolicy"/>

        <!--移除无引用连接，指那些没有close的连接，此处设置为false，需要保证程序中连接一定释放-->
        <property name="removeAbandonedOnBorrow" value="false"/>
        <property name="removeAbandonedOnMaintenance" value="false"/>
        <!--超时后将自动关闭无引用连接，单位：秒-->
        <property name="removeAbandonedTimeout" value="10"/>
    </bean>

    <!--阿里巴巴Druid数据库连接池-->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">

        <!-- 基本属性 url、user、password -->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <property name="filters" value="stat,log4j" />

        <!-- 配置初始化大小、最小、最大 -->
        <property name="maxActive" value="20" />
        <property name="initialSize" value="1" />
        <property name="minIdle" value="1" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <property name="poolPreparedStatements" value="true" />
        <property name="maxOpenPreparedStatements" value="20" />

        <property name="asyncInit" value="true" />

    </bean>
</beans>